apiVersion: v1
kind: ServiceAccount
metadata:
  name: admission-registry-sa

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: admission-registry-clusterrole
rules:
  - verbs: ["*"]
    resources: ["validatingwebhookconfigurations", "mutatingwebhookconfigurations"]
    apiGroups: ["admissionregistration.k8s.io"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admission-registry-clusterrolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admission-registry-clusterrole
subjects:
  - kind: ServiceAccount
    name: admission-registry-sa
    namespace: default

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: admission-registry
  labels:
    app: admission-registry
spec:
  selector:
    matchLabels:
      app: admission-registry
  template:
    metadata:
      labels:
        app: admission-registry
    spec:
      serviceAccountName: admission-registry-sa
      initContainers:
        - name: webhook-init
          image: dfy007/admission-registry-tls:v1.8
          imagePullPolicy: IfNotPresent
          env:
            - name: WEBHOOK_NAMESPACE
              value: default
            - name: WEBHOOK_SERVICE
              value: admission-registry
            - name: VALIDATE_CONFIG
              value: admission-registry
            - name: VALIDATE_PATH
              value: /validate
            - name: MUTATE_CONFIG
              value: admission-registry-mutate
            - name: MUTATE_PATH
              value: /mutate
          volumeMounts:
            - name: webhook-certs
              mountPath: /etc/webhook/certs
      containers:
        - name: webhook
          image: dfy007/admission-webhook-example:v1.8
          imagePullPolicy: IfNotPresent
          env:
            - name: WHITELIST_REGISTRIES
              value: "docker.io,gcr.io"
          ports:
            - containerPort: 443
          volumeMounts:
            - name: webhook-certs
              mountPath: /etc/webhook/certs
              readOnly: true
      volumes:
        - name: webhook-certs
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: admission-registry
  labels:
    app: admission-registry
spec:
  ports:
    - port: 443
      targetPort: 443
  selector:
    app: admission-registry